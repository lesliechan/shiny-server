li <- 30/72
x <- seq(0, 6, by=0.01)         ## ECG strip size (standard)
type1wav <- function(x,a,d,t,l) {
x=x+t
b=(2*l)/d
w1=1/l
w2=0
for(i in 1:n) {
harm1=(((sin((pi/(2*b))*(b-(2*i))))/(b-(2*i))+(sin((pi/(2*b))*(b+(2*i))))/(b+(2*i)))*(2/pi))*cos((i*pi*x)/l)
w2=w2+harm1
}
wav1 <- w1+w2
return(a*wav1)
}
## Function: Generic WAVE2 (q, qrs, s) function
## -----------
## draws the generic wave2 in the ECG
##
type2wav <- function(x,a,d,t,l) {
b=(2*l)/d
w1=(a/(2*b))*(2-b)
w2=0
for(i in 1:n) {
harm2=(((2*b*a)/(i*i*pi*pi))*(1-cos((i*pi)/b)))*cos((i*pi*x)/l)
w2=w2+harm2
}
return(w1+w2)
}
##
## ecgpoints function
## ==========
ecgpoints <- function(x, li,
a_p, d_p, t_p,
a_q, d_q, t_q,
a_qrs, d_qrs, t_qrs,
a_s, d_s, t_s,
a_t, d_t,t_t,
a_u, d_u, t_u) {
pwav=type1wav(x,a_p,d_p,t_p,li)
qwav=type2wav(x,a_q,d_q,t_q,li)
qrswav=type2wav(x,a_qrs,d_qrs,t_q, li)
swav=type2wav(x,a_s,d_s,t_s,li)
twav=type1wav(x,a_t,d_t,t_t,li)
uwav=type1wav(x,a_u,d_u,t_u,li)
ecg=pwav+qrswav+twav+swav+qwav+uwav
return(ecg)
}
ecgpoints(x, li,)
ecgpoints(x, li, corrected_axis[,"I"])
corrected_axis[,"I"]
as.list(corrected_axis[,"I"])
?as
as.value(corrected_axis[,"I"])
as.numeric(corrected_axis[,"I"])
ecgpoints(x, li, as.numeric(corrected_axis[,"I"]))
ecgpoints(x, li, 0.25, 0.09,0.16,0.025,0.066,0.166,1.6,0.11,NA,0.25,0.66,-0.09,0.35,0.144,-0.155,0.035,0.0476,-0.433)
n <- 100                        ## resolution of ECG
ecgpoints(x, li, 0.25, 0.09,0.16,0.025,0.066,0.166,1.6,0.11,NA,0.25,0.66,-0.09,0.35,0.144,-0.155,0.035,0.0476,-0.433)
ecgpoints(x, li, as.numeric(corrected_axis[,"I"]))
length(as.numeric(corrected_axis[,"I"]))
ecgpoints(x, li,
corrected_axis["a_p",],
corrected_axis["d_p",],
corrected_axis["t_p",],
corrected_axis["a_q",],
corrected_axis["d_q",],
corrected_axis["t_q",],
corrected_axis["a_qrs",],
corrected_axis["d_qrs",],
corrected_axis["t_qrs",],
corrected_axis["a_s",],
corrected_axis["d_s",],
corrected_axis["t_s",],
corrected_axis["a_t",],
corrected_axis["d_t",],
corrected_axis["t_t",],
corrected_axis["a_u",],
corrected_axis["d_u",],
corrected_axis["t_u",]
)
corrected_axis
ecgpoints(x, li, corrected_axis)
corrected_axis[,1]
ecgpoints(x, li, corrected_axis[,1])
ecgpoints(x, li,
corrected_axis["a_p",1],
corrected_axis["d_p",1],
corrected_axis["t_p",1],
corrected_axis["a_q",1],
corrected_axis["d_q",1],
corrected_axis["t_q",1],
corrected_axis["a_qrs",1],
corrected_axis["d_qrs",1],
corrected_axis["t_qrs",1],
corrected_axis["a_s",1],
corrected_axis["d_s",1],
corrected_axis["t_s",1],
corrected_axis["a_t",1],
corrected_axis["d_t",1],
corrected_axis["t_t",1],
corrected_axis["a_u",1],
corrected_axis["d_u",1],
corrected_axis["t_u",1]
)
corrected_axis
corrected_axis <- cbind(leadII, leadII, leadII, leadII, leadII, leadII, leadII, leadII, leadII, leadII, leadII, leadII)
colnames(corrected_axis) <- leadnames
rownames(corrected_axis) <- c("a_p","d_p","t_p","a_q","d_q","t_q","a_qrs","d_qrs","t_qrs",
"a_s","d_s","t_s","a_t","d_t","t_t","a_u","d_u","t_u")
corrected_axis["a_qrs",] <- corrected_axis["a_qrs",]*theaxisfactor(80,80)
corrected_axis["a_p",] <- corrected_axis["a_qrs",]*theaxisfactor(80,80)
corrected_axis["a_t",] <- corrected_axis["a_qrs",]*theaxisfactor(80, 80)
corrected_axis
ecgpoints(x, li, corrected_axis[,1])
corrected_axis
ecgpoints(x, li,
corrected_axis["a_p",1],
corrected_axis["d_p",1],
corrected_axis["t_p",1],
corrected_axis["a_q",1],
corrected_axis["d_q",1],
corrected_axis["t_q",1],
corrected_axis["a_qrs",1],
corrected_axis["d_qrs",1],
corrected_axis["t_qrs",1],
corrected_axis["a_s",1],
corrected_axis["d_s",1],
corrected_axis["t_s",1],
corrected_axis["a_t",1],
corrected_axis["d_t",1],
corrected_axis["t_t",1],
corrected_axis["a_u",1],
corrected_axis["d_u",1],
corrected_axis["t_u",1]
)
length(x)
ecg_data_temp <- data.frame(x)
for (elead in 1:12) {
cbind(ecg_data_temp,
ecgpoints(x, li,
corrected_axis["a_p",elead],
corrected_axis["d_p",elead],
corrected_axis["t_p",elead],
corrected_axis["a_q",elead],
corrected_axis["d_q",elead],
corrected_axis["t_q",elead],
corrected_axis["a_qrs",elead],
corrected_axis["d_qrs",elead],
corrected_axis["t_qrs",elead],
corrected_axis["a_s",elead],
corrected_axis["d_s",elead],
corrected_axis["t_s",elead],
corrected_axis["a_t",elead],
corrected_axis["d_t",elead],
corrected_axis["t_t",elead],
corrected_axis["a_u",elead],
corrected_axis["d_u",elead],
corrected_axis["t_u",elead]
))}
names(ecg_data_temp) <- c("x", "I","II","III","aVR","aVL","aVF",
"V1","V2","V3","V4","V5","V6")
ecg_data_temp
for (elead in 1:12) {
cbind(ecg_data_temp,
ecgpoints(x, li,
corrected_axis["a_p",elead],
corrected_axis["d_p",elead],
corrected_axis["t_p",elead],
corrected_axis["a_q",elead],
corrected_axis["d_q",elead],
corrected_axis["t_q",elead],
corrected_axis["a_qrs",elead],
corrected_axis["d_qrs",elead],
corrected_axis["t_qrs",elead],
corrected_axis["a_s",elead],
corrected_axis["d_s",elead],
corrected_axis["t_s",elead],
corrected_axis["a_t",elead],
corrected_axis["d_t",elead],
corrected_axis["t_t",elead],
corrected_axis["a_u",elead],
corrected_axis["d_u",elead],
corrected_axis["t_u",elead]
))}
ecg_data_temp
for (elead in 1:12) {
ecg_data_temp <- cbind(ecg_data_temp,
ecgpoints(x, li,
corrected_axis["a_p",elead],
corrected_axis["d_p",elead],
corrected_axis["t_p",elead],
corrected_axis["a_q",elead],
corrected_axis["d_q",elead],
corrected_axis["t_q",elead],
corrected_axis["a_qrs",elead],
corrected_axis["d_qrs",elead],
corrected_axis["t_qrs",elead],
corrected_axis["a_s",elead],
corrected_axis["d_s",elead],
corrected_axis["t_s",elead],
corrected_axis["a_t",elead],
corrected_axis["d_t",elead],
corrected_axis["t_t",elead],
corrected_axis["a_u",elead],
corrected_axis["d_u",elead],
corrected_axis["t_u",elead]
))}
names(ecg_data_temp) <- c("x", "I","II","III","aVR","aVL","aVF",
"V1","V2","V3","V4","V5","V6")
ecg_data_temp
head(ecg_data_temp)
ecg_ggplot <- function(ecglead) {
return (ggplot(ecg_data(), aes(x=x,y=ecglead)) + geom_line() + ecgtheme +
annotate("text", label = to.string(ecglead), x = 0.5, y = temp_max_y, size = 8, colour = "black") +
scale_x_continuous(minor_breaks=seq(0,strip_x,small_w),
breaks=seq(0,strip_x,small_w*big_w),
limits=c(0,strip_x)) +
scale_y_continuous(minor_breaks=seq(temp_min_y-0.5,temp_max_y+2.5,small_h),
breaks=seq(temp_min_y-0.5,temp_max_y+2.5,small_h*big_h),
limits=c(temp_min_y,temp_max_y)))
}
ecg_ggplot("I")
library(ggplot2)
ecg_ggplot("I")
ecg_data <- ecg_data_temp
ecg_ggplot("I")
ecg_ggplot <- function(ecglead) {
return (ggplot(ecg_data, aes(x=x,y=ecglead)) + geom_line() + ecgtheme +
annotate("text", label = to.string(ecglead), x = 0.5, y = temp_max_y, size = 8, colour = "black") +
scale_x_continuous(minor_breaks=seq(0,strip_x,small_w),
breaks=seq(0,strip_x,small_w*big_w),
limits=c(0,strip_x)) +
scale_y_continuous(minor_breaks=seq(temp_min_y-0.5,temp_max_y+2.5,small_h),
breaks=seq(temp_min_y-0.5,temp_max_y+2.5,small_h*big_h),
limits=c(temp_min_y,temp_max_y)))
}
ecg_ggplot("I")
ecgtheme <- theme(axis.text.y=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
plot.margin = unit(c(0,-0.6,-0.6,-0.6),"cm"),
panel.background=element_rect(fill="white"),
panel.grid.major=element_line(colour="red"),
panel.grid.minor=element_line(colour="pink"))
library(grid)
ecgtheme <- theme(axis.text.y=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
plot.margin = unit(c(0,-0.6,-0.6,-0.6),"cm"),
panel.background=element_rect(fill="white"),
panel.grid.major=element_line(colour="red"),
panel.grid.minor=element_line(colour="pink"))
ecg_ggplot("I")
temp_min_y <- floor(mean(ecg_data[,"I"]) - (strip_y/2))
temp_max_y <- temp_min_y + strip_y
n <- 100                        ## resolution of ECG
x <- seq(0, 6, by=0.01)         ## ECG strip size (standard)
x2 <- seq(0, 24, by=0.01)       ## ECG strip size (long lead)
leadnames <- c("I", "II", "III", "aVR", "aVL", "aVF", "V1", "V2", "V3", "V4", "V5", "V6")
small_h <- 0.2                 ## small square height
small_w <- 0.2                 ## small square width
big_h <- 5
big_w <- 5
strip_x <- 6                    ## individual strip length
strip_y <- 4                    ## individual strip height
temp_min_y <- floor(mean(ecg_data[,"I"]) - (strip_y/2))
temp_max_y <- temp_min_y + strip_y
ecg_ggplot("I")
ecg_ggplot <- function(ecglead) {
temp_min_y <- floor(mean(ecg_data[,ecglead]) - (strip_y/2))
temp_max_y <- temp_min_y + strip_y
return (ggplot(ecg_data, aes(x=x,y=ecglead)) + geom_line() + ecgtheme +
annotate("text", label = ecglead, x = 0.5, y = temp_max_y, size = 8, colour = "black") +
scale_x_continuous(minor_breaks=seq(0,strip_x,small_w),
breaks=seq(0,strip_x,small_w*big_w),
limits=c(0,strip_x)) +
scale_y_continuous(minor_breaks=seq(temp_min_y-0.5,temp_max_y+2.5,small_h),
breaks=seq(temp_min_y-0.5,temp_max_y+2.5,small_h*big_h),
limits=c(temp_min_y,temp_max_y)))
}
ecg_ggplot("I")
ecg_ggplot <- function(ecglead) {
temp_min_y <- floor(mean(ecg_data[,ecglead]) - (strip_y/2))
temp_max_y <- temp_min_y + strip_y
return (ggplot(ecg_data, aes(x=x,y=ecglead)) + geom_line() + ecgtheme +
annotate("text", label = is.character(ecglead), x = 0.5, y = temp_max_y, size = 8, colour = "black") +
scale_x_continuous(minor_breaks=seq(0,strip_x,small_w),
breaks=seq(0,strip_x,small_w*big_w),
limits=c(0,strip_x)) +
scale_y_continuous(minor_breaks=seq(temp_min_y-0.5,temp_max_y+2.5,small_h),
breaks=seq(temp_min_y-0.5,temp_max_y+2.5,small_h*big_h),
limits=c(temp_min_y,temp_max_y)))
}
ecg_ggplot("I")
mean(ecg_data[,"I"])
?class
?classes
ecg_ggplot(2)
ecg_ggplot <- function(ecglead) {
thelead <- ecglead
temp_min_y <- floor(mean(ecg_data[,thelead]) - (strip_y/2))
temp_max_y <- temp_min_y + strip_y
return (ggplot(ecg_data, aes(x=x,y=thelead)) + geom_line() + ecgtheme +
annotate("text", label = is.character(ecglead), x = 0.5, y = temp_max_y, size = 8, colour = "black") +
scale_x_continuous(minor_breaks=seq(0,strip_x,small_w),
breaks=seq(0,strip_x,small_w*big_w),
limits=c(0,strip_x)) +
scale_y_continuous(minor_breaks=seq(temp_min_y-0.5,temp_max_y+2.5,small_h),
breaks=seq(temp_min_y-0.5,temp_max_y+2.5,small_h*big_h),
limits=c(temp_min_y,temp_max_y)))
}
ecg_ggplot("I")
?aes
ecg_ggplot <- function(ecglead) {
thelead <- ecglead
temp_min_y <- floor(mean(ecg_data[,thelead]) - (strip_y/2))
temp_max_y <- temp_min_y + strip_y
return (ggplot(ecg_data, aes(x=x,y="I")) + geom_line() + ecgtheme +
annotate("text", label = is.character(ecglead), x = 0.5, y = temp_max_y, size = 8, colour = "black") +
scale_x_continuous(minor_breaks=seq(0,strip_x,small_w),
breaks=seq(0,strip_x,small_w*big_w),
limits=c(0,strip_x)) +
scale_y_continuous(minor_breaks=seq(temp_min_y-0.5,temp_max_y+2.5,small_h),
breaks=seq(temp_min_y-0.5,temp_max_y+2.5,small_h*big_h),
limits=c(temp_min_y,temp_max_y)))
}
ecg_ggplot("I")
head(ecg_data)
ecg_ggplot("II")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?reactive
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?plot
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?aes
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
colMeans()
?colMeans
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?mean
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
